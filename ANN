% clear;
% load dataset.txt;
% y=dataset(:,5);
% % y=(y-2)/2;%真正分类
% data1=dataset(:,1:4);
% % % % x=data1';
%x=mapminmax(data1',0.1,0.9);%输入数据
clc;clear;
load data.txt;
%%%设计输入9个神经元，隐含层8个，输出9个
y=data(:,11);
y=(y-2)/2;%真正分类
data1=data(:,2:10);



 x=sigmf(data1',[1 0]);
 lamda=0.3;
 yita=0.2;
 beta=0.5;
 
 sanjiao1=zeros(5,10);%四个输入，一个偏置
 sanjiao2=zeros(9,6);%四个输入，一个偏置
%  sanjiao3=zeros(9,9);
 theta1=rand(5,10);
 theta2=rand(9,6);
%   theta3=rand(9,9); 
 
 m=length(y);
 h_w = waitbar(0,'请稍候，处理中>>');
%  D1=zeros(8,10);
%  D2=zeros(9,9);
%  G1last=zeros(8,10);
%  G2last=zeros(9,9);
 for n=1:5000
 sanjiao1=zeros(5,10);
 sanjiao2=zeros(9,6);
%  sanjiao1=zeros(8,10);%九个输入，一个偏置
%  sanjiao2=zeros(8,9);%八个输入，一个偏置
%   sanjiao3=zeros(9,9);%六个输入，一个偏置
 for i=1:m
     
 a1=x(:,i);
 yt=x(:,i);
 z2=theta1*[a1;1];
 a2=sigmf(z2,[1 0]);
 z3=theta2*[a2;1];
 a3=sigmf(z3,[1 0]);
%  z4=theta3*[a3;1];
%  a4=sigmf(z4,[1 0]);
 
%  delta4=a4-yt;
 delta3=a3-yt;
%  delta3=(theta3'*delta4).*[a3;1].*(1-[a3;1]);
%  delta2=(theta2'*delta3(1:size(delta3,1)-1,:)).*[a2;1].*(1-[a2;1]);
delta2=(theta2'*delta3).*[a2;1].*(1-[a2;1]);
%  sanjiao3=sanjiao3+delta4*[a3' 1];
%  sanjiao2=sanjiao2+delta3(1:size(delta3,1)-1)*[a2' 1];
 sanjiao2=sanjiao2+delta3*[a2' 1];
 sanjiao1=sanjiao1+delta2(1:size(delta2,1)-1)*[a1' 1];
%  
%  D3J1=1/m*(sanjiao3(:,1:size(sanjiao3,2)-1)+lamda*theta3(:,1:size(theta3,2)-1));
%  D3J0=1/m*sanjiao3(:,size(theta3,2));
%  D3=[D3J1 D3J0];
 
 D2J1=1/m*(sanjiao2(:,1:size(theta2,2)-1)+lamda*theta2(:,1:size(theta2,2)-1));
 D2J0=1/m*sanjiao2(:,size(theta2,2));
%  G2=[D2J1 D2J0];
%  D2=beta*D2+G2+beta*(G2-G2last);
 D2=[D2J1 D2J0];
 D1J1=1/m*(sanjiao1(:,1:size(sanjiao1,2)-1)+lamda*theta1(:,1:size(theta1,2)-1));
 D1J0=1/m*sanjiao1(:,size(sanjiao1,2));
%  G1=[D1J1 D1J0];
%  D1=beta*D1+G1+beta*(G1-G1last);
D1=[D1J1 D1J0];
%  G1last=G1;
%  G2last=G2;
 cost(i)=sum(yt.*log(a3)+(1-yt).*log(1-a3));
 error(:,i)=a3-yt;
 end
 theta1=theta1-yita*D1;
 theta2=theta2-yita*D2;
%  theta3=theta3-yita*D3;
costsum(n)=-1/m*sum(cost);
%  costsum(n)=-1/m*sum(cost)+lamda/2/m*sum(sum(theta2.*theta2));
 waitbar(n/5000);
 end
 close(h_w);
 error1=max(max(abs(error)));
 plot(costsum);
 errornum=0;
 for i=1:size(error,1)
     for j=1:size(error,2)
         if(abs(error(i,j))>0.05)
             errornum=errornum+1;
         end
     end
 end
 
